/* Add Vendor Prefixes to Any CSS Property */
/* @include css3-prefix(transform, scale3d(2.5, 2, 1.5)); */
@mixin css3-prefix($prop, $value, $general: true) {
  -webkit-#{$prop}: #{$value};
  -webkit-touch-#{$prop}: #{$value};
  -khtml-#{$prop}: #{$value};
  -ms--#{$prop}: #{$value};
  -moz-#{$prop}: #{$value};
  -ms-#{$prop}: #{$value};
  -o-#{$prop}: #{$value};
  @if ($general) {
    #{$prop}: #{$value};
  }
}

/* Fluid typography */
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

/* Keyframe Animations */
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

/* Vertical Centering */
@mixin vertical-center {
  position: relative;
  top: 50%;
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

/* Flex center position */
@mixin center-position($direction: row) {
  display: flex;
  flex-direction: $direction;
  align-content: center;
  justify-content: center;
  align-items: center;
}

/* Scrollbar */
@mixin scrollbar($color) {
  ::-webkit-scrollbar {
    height: 12px;
    width: 10px;
  }
  ::-webkit-scrollbar-thumb {
    background-color: $color;
    border-radius: 10rem;
  }
  ::-webkit-scrollbar-track {
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.35);
    border-radius: 2rem;
  }
  ::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0);
  }
}

/* Text Shortening */
@mixin text-shorten($numLines: 1) {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;

  @supports (-webkit-line-clamp: $numLines) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: initial;
    display: -webkit-box;
    -webkit-line-clamp: $numLines;
    -webkit-box-orient: vertical;
  }
}

/* Hover lift */
@mixin pseudo(
  $location: before,
  $content: "",
  $position: absolute,
  $top: 0,
  $right: 0,
  $bottom: 0,
  $left: 0
) {
  position: relative;

  &::#{$location} {
    content: $content;
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    @content;
  }
}

@mixin hover-lift() {
  transition: transform 0.35s ease-in-out;
  box-shadow: 0em 0.25em 0.5em 0em rgba(0, 0, 0, 0.2);

  @include pseudo($location: after) {
    box-shadow: 0em 0em 1.25em 0em rgba(0, 0, 0, 0.4);
    transition: transform 0.2s ease-in-out;
    opacity: 0;
  }

  &:hover,
  &:focus {
    transform: scale(1.05);
    &::before {
      opacity: 1;
    }
  }
}
